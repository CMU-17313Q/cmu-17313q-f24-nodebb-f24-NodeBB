'use strict';function cov_2ifhzbn1j1(){var path="/home/jdufitum/nodebb-f24-pentagon/src/socket.io/plugins.js";var hash="250cd4fa20ba1863c36d3453df7a4e3e87466e92";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/jdufitum/nodebb-f24-pentagon/src/socket.io/plugins.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:24}},"1":{start:{line:17,column:0},end:{line:17,column:31}}},fnMap:{},branchMap:{},s:{"0":0,"1":0},f:{},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"250cd4fa20ba1863c36d3453df7a4e3e87466e92"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2ifhzbn1j1=function(){return actualCoverage;};}return actualCoverage;}cov_2ifhzbn1j1();const SocketPlugins=(cov_2ifhzbn1j1().s[0]++,{});/*
	This file is provided exclusively so that plugins can require it and add their own socket listeners.

	How? From your plugin:

		const SocketPlugins = require.main.require('./src/socket.io/plugins');
		SocketPlugins.myPlugin = {};
		SocketPlugins.myPlugin.myMethod = function(socket, data, callback) { ... };

	Be a good lad and namespace your methods.
*/cov_2ifhzbn1j1().s[1]++;module.exports=SocketPlugins;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmlmaHpibjFqMSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsImJyYW5jaE1hcCIsInMiLCJmIiwiYiIsIl9jb3ZlcmFnZVNjaGVtYSIsImNvdmVyYWdlIiwiYWN0dWFsQ292ZXJhZ2UiLCJTb2NrZXRQbHVnaW5zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInBsdWdpbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBTb2NrZXRQbHVnaW5zID0ge307XG5cbi8qXG5cdFRoaXMgZmlsZSBpcyBwcm92aWRlZCBleGNsdXNpdmVseSBzbyB0aGF0IHBsdWdpbnMgY2FuIHJlcXVpcmUgaXQgYW5kIGFkZCB0aGVpciBvd24gc29ja2V0IGxpc3RlbmVycy5cblxuXHRIb3c/IEZyb20geW91ciBwbHVnaW46XG5cblx0XHRjb25zdCBTb2NrZXRQbHVnaW5zID0gcmVxdWlyZS5tYWluLnJlcXVpcmUoJy4vc3JjL3NvY2tldC5pby9wbHVnaW5zJyk7XG5cdFx0U29ja2V0UGx1Z2lucy5teVBsdWdpbiA9IHt9O1xuXHRcdFNvY2tldFBsdWdpbnMubXlQbHVnaW4ubXlNZXRob2QgPSBmdW5jdGlvbihzb2NrZXQsIGRhdGEsIGNhbGxiYWNrKSB7IC4uLiB9O1xuXG5cdEJlIGEgZ29vZCBsYWQgYW5kIG5hbWVzcGFjZSB5b3VyIG1ldGhvZHMuXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNvY2tldFBsdWdpbnM7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQyxTQUFBQSxlQUFBLE1BQUFDLElBQUEsbUVBQUFDLElBQUEsZ0RBQUFDLE1BQUEsS0FBQUMsUUFBQSxzQkFBQUMsR0FBQSxvQkFBQUMsWUFBQSxFQUFBTCxJQUFBLCtEQUFBTSxZQUFBLE9BQUFDLEtBQUEsRUFBQUMsSUFBQSxHQUFBQyxNQUFBLEtBQUFDLEdBQUEsRUFBQUYsSUFBQSxHQUFBQyxNQUFBLFdBQUFGLEtBQUEsRUFBQUMsSUFBQSxJQUFBQyxNQUFBLElBQUFDLEdBQUEsRUFBQUYsSUFBQSxJQUFBQyxNQUFBLE9BQUFFLEtBQUEsSUFBQUMsU0FBQSxJQUFBQyxDQUFBLGVBQUFDLENBQUEsSUFBQUMsQ0FBQSxJQUFBQyxlQUFBLDRDQUFBZixJQUFBLGlEQUFBZ0IsUUFBQSxDQUFBZixNQUFBLENBQUFFLEdBQUEsSUFBQUYsTUFBQSxDQUFBRSxHQUFBLFVBQUFhLFFBQUEsQ0FBQWpCLElBQUEsR0FBQWlCLFFBQUEsQ0FBQWpCLElBQUEsRUFBQUMsSUFBQSxHQUFBQSxJQUFBLEVBQUFnQixRQUFBLENBQUFqQixJQUFBLEVBQUFLLFlBQUEsTUFBQWEsY0FBQSxDQUFBRCxRQUFBLENBQUFqQixJQUFBLEdBZUQ7QUFBQUQsY0FBQSxTQUFBQSxDQUFBLFNBQUFtQixjQUFBLFdBQUFBLGNBQUEsRUFBQW5CLGNBQUEsR0FiWixLQUFNLENBQUFvQixhQUFhLEVBQUFwQixjQUFBLEdBQUFjLENBQUEsTUFBRyxDQUFDLENBQUMsRUFFeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQVZBZCxjQUFBLEdBQUFjLENBQUEsTUFZQU8sTUFBTSxDQUFDQyxPQUFPLENBQUdGLGFBQWEiLCJpZ25vcmVMaXN0IjpbXX0=